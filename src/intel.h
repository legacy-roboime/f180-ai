#pragma once

#include "robot.h"
#include "env/ssl_geometry.h"
#include "env/state.h"
#include "env/ball.h"
#include "env/utils.h"
#include "env/vec3.h"

//! \brief Intel class holds the methods for all inputs and outputs.
//! These I/O happens between the binary generated by this project (see README.md)
//! and the software project roboime-next and define how is the world and how our
//! robots may behave in it.

class Intel{
public:
  Intel() = default;
  ~Intel() = default;

  void geometryInput();
  void stateIO();
  void loop();

  float goalieCost( const Vec3 ball_pos, const Vec3 goalie_pos );
  Vec3 calcMinCost ( const Vec3 ball_pos );

  Geometry getGeometry() const { return ssl_geometry_; }
  State getState() const { return state_; }
private:
  Geometry ssl_geometry_;
  State state_;
  Ball ball_;
  float d_t;
};

// Important spots in the field further defined once we get the
// geometry input (see geometryInput() and loop() methods)
static Vec3 ENEMY_GOAL;
static Vec3 OUR_GOAL;
static Vec3 TOP_MID;
